AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - CloudFront with Header Security and site content
Parameters:
  CertificateArn:
    Description: Certificate locater
    Type: String
  DomainName:
    Description: Apex domain
    Type: String
  HostedZoneId:
    Description: Route53 Hosted Zone Id
    Type: String
  S3BucketLogs:
    Description: Logging Bucket
    Type: String
  S3BucketRoot:
    Description: Content Bucket
    Type: String
  S3BucketLogsName:
    Description: Logging Bucket
    Type: String
  S3BucketRootName:
    Description: Content Bucket
    Type: String
  S3BucketRootArn:
    Description: Content Bucket locator
    Type: String
  LambdaVersion:
    Description: Lambda@Edge Version ARN
    Type: String
Resources:
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3BucketRoot
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Sub: ${S3BucketRootArn}/*
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - CloudFrontOriginAccessIdentity
              - S3CanonicalUserId
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - Ref: DomainName
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId:
            Fn::Sub: S3-${AWS::StackName}-root
          LambdaFunctionAssociations:
          - EventType: origin-response
            LambdaFunctionARN:
              Ref: LambdaVersion
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
        - ErrorCachingMinTTL: 60
          ErrorCode: 404
          ResponseCode: 404
          ResponsePagePath: /404.html
        - ErrorCachingMinTTL: 60
          ErrorCode: 403
          ResponseCode: 403
          ResponsePagePath: /403.html
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: index.html
        IPV6Enabled: true
        Logging:
          Bucket:
            Ref: S3BucketLogsName
          IncludeCookies: false
          Prefix: cdn/
        Origins:
        - DomainName:
            Ref: S3BucketRootName
          Id:
            Fn::Sub: S3-${AWS::StackName}-root
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join:
              - ''
              - - origin-access-identity/cloudfront/
                - Ref: CloudFrontOriginAccessIdentity
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn:
            Ref: CertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only
      Tags:
      - Key: Solution
        Value: ACFS3
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Sub: CloudFront OAI for ${DomainName}
  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Sub: ${DomainName}.
      RecordSets:
      - Name:
          Ref: DomainName
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CloudFrontDistribution
            - DomainName
          EvaluateTargetHealth: false
          # "Specify Z2FDTNDATAQYW2. This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution."
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
          HostedZoneId: Z2FDTNDATAQYW2 
Outputs:
  CloudFrontDistributionId:
    Description: CloudFront distribution id
    Value:
      Ref: CloudFrontDistribution
  CloudFrontDomainName:
    Description: Website address
    Value:
      Ref: DomainName
