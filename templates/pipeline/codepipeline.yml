AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a Code Pipeline which build/updates a Javascript SPA 
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: GitHub Settings
        Parameters:
          - GitHubOAuthToken
          - GitHubOwner
          - GitHubRepo
          - GitHubBranch
      - Label:
          default: S3 Settings
        Parameters:
          - TargetS3Bucket
      - Label:
          default: CloudFront Settings
        Parameters:
          - CloudFrontDistributionId
          - CloudFrontInvalidationLambdaName
    ParameterLabels:
      GitHubOAuthToken:
        default: GitHub OAuth Token
      GitHubOwner:
        default: GitHub Owner
      GitHubRepo:
        default: GitHub Repo
      GitHubBranch:
        default: GitHub Branch
      TargetS3Bucket:
        default: Target S3 Bucket
      CloudFrontDistributionId:
        default: Cloudfront Distribution ID
      CloudFrontInvalidationLambdaName:
        default: Lambda Function Name
Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
    Description: With this Token a Webhook will be created for the repo
  GitHubOwner:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Description: The Owner of the GitHub Repo
  GitHubRepo:
    Type: String
    Description: The name of the GitHub Repo
  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"
    Description: The name of the GitHub Repo Branch which should be used
  TargetS3Bucket:
    Type: String
    Description: The name of pre-existing origin S3 bucket where the build assets will be deployed
  CloudFrontDistributionId:
    Type: String
    Description: ID of CloudFront Distribution
  CloudFrontInvalidationLambdaName:
    Type: String
    Description: Name of the Lambda function that will invalidates objects in CloudFront distribution after successful deployment
Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-codepipeline-artifacts
      VersioningConfiguration:
        Status: Enabled
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-CodeBuild
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-CodePipeline
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: PublicFiles
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: S3Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: PublicFiles
              Configuration:
                BucketName: !Ref TargetS3Bucket
                Extract: 'true'
              RunOrder: 1
            - Name: LambdaDeploy
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: !Ref CloudFrontInvalidationLambdaName
                UserParameters: !Ref CloudFrontDistributionId
              RunOrder: 2
  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version
  CreateCodePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${AWS::StackName}-CodePipelinePolicy
      Description: "Policy for the CodePipeline"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: s3:*
            Resource: [
              !Sub 'arn:aws:s3:::${TargetS3Bucket}',
              !Sub 'arn:aws:s3:::${TargetS3Bucket}/*',
              !Sub 'arn:aws:s3:::${AWS::StackName}-codepipeline-artifacts',
              !Sub 'arn:aws:s3:::${AWS::StackName}-codepipeline-artifacts/*'
            ]
          - Sid: VisualEditor1
            Effect: Allow
            Action: logs:*
            Resource: '*'
          - Sid: VisualEditor2
            Effect: Allow
            Action: codebuild:*
            Resource: [
              !Sub 'arn:aws:codebuild:*:*:project/${AWS::StackName}-CodeBuild',
              !Sub 'arn:aws:codebuild:*:*:project/${AWS::StackName}-CodeBuild/*'
            ]
          - Sid: VisualEditor3
            Effect: Allow
            Action: [
              'lambda:ListFunctions',
              'lambda:InvokeFunction'
            ]
            Resource: [
              !Sub 'arn:aws:lambda:*:*:function:${CloudFrontInvalidationLambdaName}'
            ]
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'CodePipeline_Role'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CreateCodePipelinePolicy
  CreateCodeBuildPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${AWS::StackName}-CodeBuildPolicy
      Description: "Policy for CodeBuild access to logs and S3 Buckets"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: s3:*
            Resource: [
              !Sub 'arn:aws:s3:::${TargetS3Bucket}',
              !Sub 'arn:aws:s3:::${TargetS3Bucket}/*',
              !Sub 'arn:aws:s3:::${AWS::StackName}-codepipeline-artifacts',
              !Sub 'arn:aws:s3:::${AWS::StackName}-codepipeline-artifacts/*'
            ]
          - Sid: VisualEditor1
            Effect: Allow
            Action: logs:*
            Resource: '*'
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns: [
        !Ref CreateCodeBuildPolicy
      ]
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
      Path: /
      RoleName:
        Fn::Sub: ${AWS::StackName}-CodeBuildRole
Outputs:
  CodeBuildProjectARN:
    Description: CodeBuild Project ARN
    Value:
      !Ref CodeBuildProject
  CodePipelineARN:
    Description: CodePipeline ARN
    Value:
      !Ref CodePipeline